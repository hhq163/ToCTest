// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgObject.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgObject.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace yunquan {

void protobuf_ShutdownFile_MsgObject_2eproto() {
  delete MsgObjSystem::default_instance_;
  delete MsgObjText::default_instance_;
  delete MsgObjImage::default_instance_;
  delete MsgObjVoice::default_instance_;
  delete MsgObjVideo::default_instance_;
  delete MsgObjLink::default_instance_;
  delete MsgObjCard::default_instance_;
  delete MsgObjActivity::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_MsgObject_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_MsgObject_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  MsgObjSystem::default_instance_ = new MsgObjSystem();
  MsgObjText::default_instance_ = new MsgObjText();
  MsgObjImage::default_instance_ = new MsgObjImage();
  MsgObjVoice::default_instance_ = new MsgObjVoice();
  MsgObjVideo::default_instance_ = new MsgObjVideo();
  MsgObjLink::default_instance_ = new MsgObjLink();
  MsgObjCard::default_instance_ = new MsgObjCard();
  MsgObjActivity::default_instance_ = new MsgObjActivity();
  MsgObjSystem::default_instance_->InitAsDefaultInstance();
  MsgObjText::default_instance_->InitAsDefaultInstance();
  MsgObjImage::default_instance_->InitAsDefaultInstance();
  MsgObjVoice::default_instance_->InitAsDefaultInstance();
  MsgObjVideo::default_instance_->InitAsDefaultInstance();
  MsgObjLink::default_instance_->InitAsDefaultInstance();
  MsgObjCard::default_instance_->InitAsDefaultInstance();
  MsgObjActivity::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgObject_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MsgObject_2eproto_once_);
void protobuf_AddDesc_MsgObject_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MsgObject_2eproto_once_,
                 &protobuf_AddDesc_MsgObject_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgObject_2eproto {
  StaticDescriptorInitializer_MsgObject_2eproto() {
    protobuf_AddDesc_MsgObject_2eproto();
  }
} static_descriptor_initializer_MsgObject_2eproto_;
#endif
bool E_MSG_OBJECT_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjSystem::kTypeFieldNumber;
const int MsgObjSystem::kMsgFieldNumber;
#endif  // !_MSC_VER

MsgObjSystem::MsgObjSystem()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjSystem)
}

void MsgObjSystem::InitAsDefaultInstance() {
}

MsgObjSystem::MsgObjSystem(const MsgObjSystem& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjSystem)
}

void MsgObjSystem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjSystem::~MsgObjSystem() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjSystem)
  SharedDtor();
}

void MsgObjSystem::SharedDtor() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjSystem& MsgObjSystem::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjSystem* MsgObjSystem::default_instance_ = NULL;

MsgObjSystem* MsgObjSystem::New() const {
  return new MsgObjSystem;
}

void MsgObjSystem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjSystem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjSystem)
  return false;
#undef DO_
}

void MsgObjSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjSystem)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjSystem)
}

int MsgObjSystem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjSystem::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjSystem*>(&from));
}

void MsgObjSystem::MergeFrom(const MsgObjSystem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjSystem::CopyFrom(const MsgObjSystem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjSystem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgObjSystem::Swap(MsgObjSystem* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjSystem::GetTypeName() const {
  return "yunquan.MsgObjSystem";
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjText::kTypeFieldNumber;
const int MsgObjText::kMsgFieldNumber;
#endif  // !_MSC_VER

MsgObjText::MsgObjText()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjText)
}

void MsgObjText::InitAsDefaultInstance() {
}

MsgObjText::MsgObjText(const MsgObjText& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjText)
}

void MsgObjText::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjText::~MsgObjText() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjText)
  SharedDtor();
}

void MsgObjText::SharedDtor() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjText& MsgObjText::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjText* MsgObjText::default_instance_ = NULL;

MsgObjText* MsgObjText::New() const {
  return new MsgObjText;
}

void MsgObjText::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjText)
  return false;
#undef DO_
}

void MsgObjText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjText)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjText)
}

int MsgObjText::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjText::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjText*>(&from));
}

void MsgObjText::MergeFrom(const MsgObjText& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjText::CopyFrom(const MsgObjText& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjText::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgObjText::Swap(MsgObjText* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjText::GetTypeName() const {
  return "yunquan.MsgObjText";
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjImage::kWFieldNumber;
const int MsgObjImage::kHFieldNumber;
const int MsgObjImage::kUrlFieldNumber;
const int MsgObjImage::kThumbnailUrlFieldNumber;
#endif  // !_MSC_VER

MsgObjImage::MsgObjImage()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjImage)
}

void MsgObjImage::InitAsDefaultInstance() {
}

MsgObjImage::MsgObjImage(const MsgObjImage& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjImage)
}

void MsgObjImage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  w_ = 0;
  h_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnailurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjImage::~MsgObjImage() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjImage)
  SharedDtor();
}

void MsgObjImage::SharedDtor() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (thumbnailurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete thumbnailurl_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjImage& MsgObjImage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjImage* MsgObjImage::default_instance_ = NULL;

MsgObjImage* MsgObjImage::New() const {
  return new MsgObjImage;
}

void MsgObjImage::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgObjImage*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(w_, h_);
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
    if (has_thumbnailurl()) {
      if (thumbnailurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        thumbnailurl_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 w = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &w_)));
          set_has_w();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_h;
        break;
      }

      // required int32 h = 2;
      case 2: {
        if (tag == 16) {
         parse_h:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &h_)));
          set_has_h();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }

      // required string url = 3;
      case 3: {
        if (tag == 26) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_thumbnailUrl;
        break;
      }

      // required string thumbnailUrl = 4;
      case 4: {
        if (tag == 34) {
         parse_thumbnailUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnailurl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjImage)
  return false;
#undef DO_
}

void MsgObjImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjImage)
  // required int32 w = 1;
  if (has_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->w(), output);
  }

  // required int32 h = 2;
  if (has_h()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->h(), output);
  }

  // required string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // required string thumbnailUrl = 4;
  if (has_thumbnailurl()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->thumbnailurl(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjImage)
}

int MsgObjImage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 w = 1;
    if (has_w()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->w());
    }

    // required int32 h = 2;
    if (has_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->h());
    }

    // required string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // required string thumbnailUrl = 4;
    if (has_thumbnailurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thumbnailurl());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjImage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjImage*>(&from));
}

void MsgObjImage::MergeFrom(const MsgObjImage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_w()) {
      set_w(from.w());
    }
    if (from.has_h()) {
      set_h(from.h());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_thumbnailurl()) {
      set_thumbnailurl(from.thumbnailurl());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjImage::CopyFrom(const MsgObjImage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjImage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void MsgObjImage::Swap(MsgObjImage* other) {
  if (other != this) {
    std::swap(w_, other->w_);
    std::swap(h_, other->h_);
    std::swap(url_, other->url_);
    std::swap(thumbnailurl_, other->thumbnailurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjImage::GetTypeName() const {
  return "yunquan.MsgObjImage";
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjVoice::kLenFieldNumber;
const int MsgObjVoice::kUrlFieldNumber;
#endif  // !_MSC_VER

MsgObjVoice::MsgObjVoice()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjVoice)
}

void MsgObjVoice::InitAsDefaultInstance() {
}

MsgObjVoice::MsgObjVoice(const MsgObjVoice& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjVoice)
}

void MsgObjVoice::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  len_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjVoice::~MsgObjVoice() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjVoice)
  SharedDtor();
}

void MsgObjVoice::SharedDtor() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjVoice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjVoice& MsgObjVoice::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjVoice* MsgObjVoice::default_instance_ = NULL;

MsgObjVoice* MsgObjVoice::New() const {
  return new MsgObjVoice;
}

void MsgObjVoice::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    len_ = 0;
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjVoice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjVoice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 len = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &len_)));
          set_has_len();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // required string url = 2;
      case 2: {
        if (tag == 18) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjVoice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjVoice)
  return false;
#undef DO_
}

void MsgObjVoice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjVoice)
  // required int32 len = 1;
  if (has_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->len(), output);
  }

  // required string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjVoice)
}

int MsgObjVoice::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 len = 1;
    if (has_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->len());
    }

    // required string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjVoice::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjVoice*>(&from));
}

void MsgObjVoice::MergeFrom(const MsgObjVoice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_len()) {
      set_len(from.len());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjVoice::CopyFrom(const MsgObjVoice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjVoice::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgObjVoice::Swap(MsgObjVoice* other) {
  if (other != this) {
    std::swap(len_, other->len_);
    std::swap(url_, other->url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjVoice::GetTypeName() const {
  return "yunquan.MsgObjVoice";
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjVideo::kLenFieldNumber;
const int MsgObjVideo::kUrlFieldNumber;
#endif  // !_MSC_VER

MsgObjVideo::MsgObjVideo()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjVideo)
}

void MsgObjVideo::InitAsDefaultInstance() {
}

MsgObjVideo::MsgObjVideo(const MsgObjVideo& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjVideo)
}

void MsgObjVideo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  len_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjVideo::~MsgObjVideo() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjVideo)
  SharedDtor();
}

void MsgObjVideo::SharedDtor() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjVideo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjVideo& MsgObjVideo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjVideo* MsgObjVideo::default_instance_ = NULL;

MsgObjVideo* MsgObjVideo::New() const {
  return new MsgObjVideo;
}

void MsgObjVideo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    len_ = 0;
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjVideo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjVideo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 len = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &len_)));
          set_has_len();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // required string url = 2;
      case 2: {
        if (tag == 18) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjVideo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjVideo)
  return false;
#undef DO_
}

void MsgObjVideo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjVideo)
  // required int32 len = 1;
  if (has_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->len(), output);
  }

  // required string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjVideo)
}

int MsgObjVideo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 len = 1;
    if (has_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->len());
    }

    // required string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjVideo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjVideo*>(&from));
}

void MsgObjVideo::MergeFrom(const MsgObjVideo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_len()) {
      set_len(from.len());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjVideo::CopyFrom(const MsgObjVideo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjVideo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgObjVideo::Swap(MsgObjVideo* other) {
  if (other != this) {
    std::swap(len_, other->len_);
    std::swap(url_, other->url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjVideo::GetTypeName() const {
  return "yunquan.MsgObjVideo";
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjLink::kTitleFieldNumber;
const int MsgObjLink::kMsgFieldNumber;
const int MsgObjLink::kUrlFieldNumber;
const int MsgObjLink::kImageUrlFieldNumber;
#endif  // !_MSC_VER

MsgObjLink::MsgObjLink()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjLink)
}

void MsgObjLink::InitAsDefaultInstance() {
}

MsgObjLink::MsgObjLink(const MsgObjLink& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjLink)
}

void MsgObjLink::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjLink::~MsgObjLink() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjLink)
  SharedDtor();
}

void MsgObjLink::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (imageurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imageurl_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjLink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjLink& MsgObjLink::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjLink* MsgObjLink::default_instance_ = NULL;

MsgObjLink* MsgObjLink::New() const {
  return new MsgObjLink;
}

void MsgObjLink::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        url_->clear();
      }
    }
    if (has_imageurl()) {
      if (imageurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        imageurl_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjLink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string title = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }

      // required string url = 3;
      case 3: {
        if (tag == 26) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_imageUrl;
        break;
      }

      // optional string imageUrl = 4;
      case 4: {
        if (tag == 34) {
         parse_imageUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imageurl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjLink)
  return false;
#undef DO_
}

void MsgObjLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjLink)
  // required string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // required string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // optional string imageUrl = 4;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->imageurl(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjLink)
}

int MsgObjLink::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string title = 1;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // required string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // required string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string imageUrl = 4;
    if (has_imageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imageurl());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjLink::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjLink*>(&from));
}

void MsgObjLink::MergeFrom(const MsgObjLink& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_imageurl()) {
      set_imageurl(from.imageurl());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjLink::CopyFrom(const MsgObjLink& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjLink::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgObjLink::Swap(MsgObjLink* other) {
  if (other != this) {
    std::swap(title_, other->title_);
    std::swap(msg_, other->msg_);
    std::swap(url_, other->url_);
    std::swap(imageurl_, other->imageurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjLink::GetTypeName() const {
  return "yunquan.MsgObjLink";
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjCard::kUidFieldNumber;
const int MsgObjCard::kNameFieldNumber;
const int MsgObjCard::kPortraitFieldNumber;
const int MsgObjCard::kPhoneFieldNumber;
const int MsgObjCard::kCompanyFieldNumber;
const int MsgObjCard::kTitleFieldNumber;
#endif  // !_MSC_VER

MsgObjCard::MsgObjCard()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjCard)
}

void MsgObjCard::InitAsDefaultInstance() {
}

MsgObjCard::MsgObjCard(const MsgObjCard& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjCard)
}

void MsgObjCard::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjCard::~MsgObjCard() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjCard)
  SharedDtor();
}

void MsgObjCard::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete portrait_;
  }
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (company_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete company_;
  }
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjCard& MsgObjCard::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjCard* MsgObjCard::default_instance_ = NULL;

MsgObjCard* MsgObjCard::New() const {
  return new MsgObjCard;
}

void MsgObjCard::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    uid_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_portrait()) {
      if (portrait_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        portrait_->clear();
      }
    }
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        phone_->clear();
      }
    }
    if (has_company()) {
      if (company_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        company_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_portrait;
        break;
      }

      // required string portrait = 3;
      case 3: {
        if (tag == 26) {
         parse_portrait:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portrait()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_phone;
        break;
      }

      // required string phone = 4;
      case 4: {
        if (tag == 34) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_company;
        break;
      }

      // required string company = 5;
      case 5: {
        if (tag == 42) {
         parse_company:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_company()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_title;
        break;
      }

      // required string title = 6;
      case 6: {
        if (tag == 50) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjCard)
  return false;
#undef DO_
}

void MsgObjCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjCard)
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string portrait = 3;
  if (has_portrait()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->portrait(), output);
  }

  // required string phone = 4;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone(), output);
  }

  // required string company = 5;
  if (has_company()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->company(), output);
  }

  // required string title = 6;
  if (has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->title(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjCard)
}

int MsgObjCard::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string portrait = 3;
    if (has_portrait()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->portrait());
    }

    // required string phone = 4;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // required string company = 5;
    if (has_company()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->company());
    }

    // required string title = 6;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjCard::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjCard*>(&from));
}

void MsgObjCard::MergeFrom(const MsgObjCard& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_portrait()) {
      set_portrait(from.portrait());
    }
    if (from.has_phone()) {
      set_phone(from.phone());
    }
    if (from.has_company()) {
      set_company(from.company());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjCard::CopyFrom(const MsgObjCard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjCard::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void MsgObjCard::Swap(MsgObjCard* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(name_, other->name_);
    std::swap(portrait_, other->portrait_);
    std::swap(phone_, other->phone_);
    std::swap(company_, other->company_);
    std::swap(title_, other->title_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjCard::GetTypeName() const {
  return "yunquan.MsgObjCard";
}


// ===================================================================

#ifndef _MSC_VER
const int MsgObjActivity::kArticleIdFieldNumber;
const int MsgObjActivity::kArticleNameFieldNumber;
const int MsgObjActivity::kUserIdFieldNumber;
const int MsgObjActivity::kAuthorNameFieldNumber;
const int MsgObjActivity::kPublishTimeFieldNumber;
const int MsgObjActivity::kStartTimeFieldNumber;
const int MsgObjActivity::kStopTimeFieldNumber;
const int MsgObjActivity::kAddressFieldNumber;
const int MsgObjActivity::kLikeCountFieldNumber;
const int MsgObjActivity::kCommentCountFieldNumber;
const int MsgObjActivity::kImageUrlFieldNumber;
#endif  // !_MSC_VER

MsgObjActivity::MsgObjActivity()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yunquan.MsgObjActivity)
}

void MsgObjActivity::InitAsDefaultInstance() {
}

MsgObjActivity::MsgObjActivity(const MsgObjActivity& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yunquan.MsgObjActivity)
}

void MsgObjActivity::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  articleid_ = GOOGLE_LONGLONG(0);
  articlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_LONGLONG(0);
  authorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publishtime_ = 0;
  starttime_ = 0;
  stoptime_ = 0;
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  likecount_ = 0;
  commentcount_ = 0;
  imageurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgObjActivity::~MsgObjActivity() {
  // @@protoc_insertion_point(destructor:yunquan.MsgObjActivity)
  SharedDtor();
}

void MsgObjActivity::SharedDtor() {
  if (articlename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete articlename_;
  }
  if (authorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete authorname_;
  }
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete address_;
  }
  if (imageurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imageurl_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgObjActivity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgObjActivity& MsgObjActivity::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgObject_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgObject_2eproto();
#endif
  return *default_instance_;
}

MsgObjActivity* MsgObjActivity::default_instance_ = NULL;

MsgObjActivity* MsgObjActivity::New() const {
  return new MsgObjActivity;
}

void MsgObjActivity::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgObjActivity*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(publishtime_, starttime_);
    articleid_ = GOOGLE_LONGLONG(0);
    if (has_articlename()) {
      if (articlename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        articlename_->clear();
      }
    }
    userid_ = GOOGLE_LONGLONG(0);
    if (has_authorname()) {
      if (authorname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        authorname_->clear();
      }
    }
    stoptime_ = 0;
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        address_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    likecount_ = 0;
    commentcount_ = 0;
    if (has_imageurl()) {
      if (imageurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        imageurl_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool MsgObjActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:yunquan.MsgObjActivity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 articleId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &articleid_)));
          set_has_articleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_articleName;
        break;
      }

      // required string articleName = 2;
      case 2: {
        if (tag == 18) {
         parse_articleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_articlename()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        break;
      }

      // required int64 userId = 3;
      case 3: {
        if (tag == 24) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_authorName;
        break;
      }

      // required string authorName = 4;
      case 4: {
        if (tag == 34) {
         parse_authorName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_publishTime;
        break;
      }

      // optional int32 publishTime = 5;
      case 5: {
        if (tag == 40) {
         parse_publishTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &publishtime_)));
          set_has_publishtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_startTime;
        break;
      }

      // optional int32 startTime = 6;
      case 6: {
        if (tag == 48) {
         parse_startTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_stopTime;
        break;
      }

      // optional int32 stopTime = 7;
      case 7: {
        if (tag == 56) {
         parse_stopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stoptime_)));
          set_has_stoptime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_address;
        break;
      }

      // required string address = 8;
      case 8: {
        if (tag == 66) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_likeCount;
        break;
      }

      // optional int32 likeCount = 9;
      case 9: {
        if (tag == 72) {
         parse_likeCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &likecount_)));
          set_has_likecount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_commentCount;
        break;
      }

      // optional int32 commentCount = 10;
      case 10: {
        if (tag == 80) {
         parse_commentCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &commentcount_)));
          set_has_commentcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_imageUrl;
        break;
      }

      // required string imageUrl = 11;
      case 11: {
        if (tag == 90) {
         parse_imageUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imageurl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yunquan.MsgObjActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yunquan.MsgObjActivity)
  return false;
#undef DO_
}

void MsgObjActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yunquan.MsgObjActivity)
  // required int64 articleId = 1;
  if (has_articleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->articleid(), output);
  }

  // required string articleName = 2;
  if (has_articlename()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->articlename(), output);
  }

  // required int64 userId = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->userid(), output);
  }

  // required string authorName = 4;
  if (has_authorname()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->authorname(), output);
  }

  // optional int32 publishTime = 5;
  if (has_publishtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->publishtime(), output);
  }

  // optional int32 startTime = 6;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starttime(), output);
  }

  // optional int32 stopTime = 7;
  if (has_stoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stoptime(), output);
  }

  // required string address = 8;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->address(), output);
  }

  // optional int32 likeCount = 9;
  if (has_likecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->likecount(), output);
  }

  // optional int32 commentCount = 10;
  if (has_commentcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->commentcount(), output);
  }

  // required string imageUrl = 11;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->imageurl(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:yunquan.MsgObjActivity)
}

int MsgObjActivity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 articleId = 1;
    if (has_articleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->articleid());
    }

    // required string articleName = 2;
    if (has_articlename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->articlename());
    }

    // required int64 userId = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userid());
    }

    // required string authorName = 4;
    if (has_authorname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authorname());
    }

    // optional int32 publishTime = 5;
    if (has_publishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->publishtime());
    }

    // optional int32 startTime = 6;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starttime());
    }

    // optional int32 stopTime = 7;
    if (has_stoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stoptime());
    }

    // required string address = 8;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 likeCount = 9;
    if (has_likecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->likecount());
    }

    // optional int32 commentCount = 10;
    if (has_commentcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->commentcount());
    }

    // required string imageUrl = 11;
    if (has_imageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imageurl());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgObjActivity::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgObjActivity*>(&from));
}

void MsgObjActivity::MergeFrom(const MsgObjActivity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_articleid()) {
      set_articleid(from.articleid());
    }
    if (from.has_articlename()) {
      set_articlename(from.articlename());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_authorname()) {
      set_authorname(from.authorname());
    }
    if (from.has_publishtime()) {
      set_publishtime(from.publishtime());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_stoptime()) {
      set_stoptime(from.stoptime());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_likecount()) {
      set_likecount(from.likecount());
    }
    if (from.has_commentcount()) {
      set_commentcount(from.commentcount());
    }
    if (from.has_imageurl()) {
      set_imageurl(from.imageurl());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgObjActivity::CopyFrom(const MsgObjActivity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgObjActivity::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000048f) != 0x0000048f) return false;

  return true;
}

void MsgObjActivity::Swap(MsgObjActivity* other) {
  if (other != this) {
    std::swap(articleid_, other->articleid_);
    std::swap(articlename_, other->articlename_);
    std::swap(userid_, other->userid_);
    std::swap(authorname_, other->authorname_);
    std::swap(publishtime_, other->publishtime_);
    std::swap(starttime_, other->starttime_);
    std::swap(stoptime_, other->stoptime_);
    std::swap(address_, other->address_);
    std::swap(likecount_, other->likecount_);
    std::swap(commentcount_, other->commentcount_);
    std::swap(imageurl_, other->imageurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string MsgObjActivity::GetTypeName() const {
  return "yunquan.MsgObjActivity";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace yunquan

// @@protoc_insertion_point(global_scope)
