// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Push.proto

#ifndef PROTOBUF_Push_2eproto__INCLUDED
#define PROTOBUF_Push_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace yunquan {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Push_2eproto();
void protobuf_AssignDesc_Push_2eproto();
void protobuf_ShutdownFile_Push_2eproto();

class Push;
class Push_Payload;
class Push_Payload_ExtendedParameter;

enum EventType {
  CHAT_SINGLE = 1,
  CHAT_GROUP = 2,
  ACTIVITY_COMMENT = 3,
  ACTIVITY_SIGN_UP_NEW = 4,
  ACTIVITY_SIGN_UP_SUCCESS = 5,
  ACTIVITY_SIGN_UP_FAILURE = 6,
  ACTIVITY_UPCOMING = 7,
  ACTIVITY_INFORMATION_CHANGE = 8,
  USER_RELATION_APPLY = 9,
  USER_RELATION_AGREE = 10,
  USER_RELATION_NEW_FRIEND = 11
};
bool EventType_IsValid(int value);
const EventType EventType_MIN = CHAT_SINGLE;
const EventType EventType_MAX = USER_RELATION_NEW_FRIEND;
const int EventType_ARRAYSIZE = EventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventType_descriptor();
inline const ::std::string& EventType_Name(EventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventType_descriptor(), value);
}
inline bool EventType_Parse(
    const ::std::string& name, EventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventType>(
    EventType_descriptor(), name, value);
}
enum PushType {
  SINGLE = 1,
  MULTI = 2,
  BROADCAST = 3
};
bool PushType_IsValid(int value);
const PushType PushType_MIN = SINGLE;
const PushType PushType_MAX = BROADCAST;
const int PushType_ARRAYSIZE = PushType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PushType_descriptor();
inline const ::std::string& PushType_Name(PushType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PushType_descriptor(), value);
}
inline bool PushType_Parse(
    const ::std::string& name, PushType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PushType>(
    PushType_descriptor(), name, value);
}
enum MessageType {
  MESSAGE = 1,
  NOTIFICATION = 2
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MESSAGE;
const MessageType MessageType_MAX = NOTIFICATION;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class Push_Payload_ExtendedParameter : public ::google::protobuf::Message {
 public:
  Push_Payload_ExtendedParameter();
  virtual ~Push_Payload_ExtendedParameter();

  Push_Payload_ExtendedParameter(const Push_Payload_ExtendedParameter& from);

  inline Push_Payload_ExtendedParameter& operator=(const Push_Payload_ExtendedParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Push_Payload_ExtendedParameter& default_instance();

  void Swap(Push_Payload_ExtendedParameter* other);

  // implements Message ----------------------------------------------

  Push_Payload_ExtendedParameter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Push_Payload_ExtendedParameter& from);
  void MergeFrom(const Push_Payload_ExtendedParameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required string val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline const ::std::string& val() const;
  inline void set_val(const ::std::string& value);
  inline void set_val(const char* value);
  inline void set_val(const char* value, size_t size);
  inline ::std::string* mutable_val();
  inline ::std::string* release_val();
  inline void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:yunquan.Push.Payload.ExtendedParameter)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* val_;
  friend void  protobuf_AddDesc_Push_2eproto();
  friend void protobuf_AssignDesc_Push_2eproto();
  friend void protobuf_ShutdownFile_Push_2eproto();

  void InitAsDefaultInstance();
  static Push_Payload_ExtendedParameter* default_instance_;
};
// -------------------------------------------------------------------

class Push_Payload : public ::google::protobuf::Message {
 public:
  Push_Payload();
  virtual ~Push_Payload();

  Push_Payload(const Push_Payload& from);

  inline Push_Payload& operator=(const Push_Payload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Push_Payload& default_instance();

  void Swap(Push_Payload* other);

  // implements Message ----------------------------------------------

  Push_Payload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Push_Payload& from);
  void MergeFrom(const Push_Payload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Push_Payload_ExtendedParameter ExtendedParameter;

  // accessors -------------------------------------------------------

  // optional string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string sound = 3;
  inline bool has_sound() const;
  inline void clear_sound();
  static const int kSoundFieldNumber = 3;
  inline const ::std::string& sound() const;
  inline void set_sound(const ::std::string& value);
  inline void set_sound(const char* value);
  inline void set_sound(const char* value, size_t size);
  inline ::std::string* mutable_sound();
  inline ::std::string* release_sound();
  inline void set_allocated_sound(::std::string* sound);

  // optional int32 badge = 4;
  inline bool has_badge() const;
  inline void clear_badge();
  static const int kBadgeFieldNumber = 4;
  inline ::google::protobuf::int32 badge() const;
  inline void set_badge(::google::protobuf::int32 value);

  // repeated .yunquan.Push.Payload.ExtendedParameter extendedParameter = 5;
  inline int extendedparameter_size() const;
  inline void clear_extendedparameter();
  static const int kExtendedParameterFieldNumber = 5;
  inline const ::yunquan::Push_Payload_ExtendedParameter& extendedparameter(int index) const;
  inline ::yunquan::Push_Payload_ExtendedParameter* mutable_extendedparameter(int index);
  inline ::yunquan::Push_Payload_ExtendedParameter* add_extendedparameter();
  inline const ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload_ExtendedParameter >&
      extendedparameter() const;
  inline ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload_ExtendedParameter >*
      mutable_extendedparameter();

  // @@protoc_insertion_point(class_scope:yunquan.Push.Payload)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_sound();
  inline void clear_has_sound();
  inline void set_has_badge();
  inline void clear_has_badge();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* description_;
  ::std::string* sound_;
  ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload_ExtendedParameter > extendedparameter_;
  ::google::protobuf::int32 badge_;
  friend void  protobuf_AddDesc_Push_2eproto();
  friend void protobuf_AssignDesc_Push_2eproto();
  friend void protobuf_ShutdownFile_Push_2eproto();

  void InitAsDefaultInstance();
  static Push_Payload* default_instance_;
};
// -------------------------------------------------------------------

class Push : public ::google::protobuf::Message {
 public:
  Push();
  virtual ~Push();

  Push(const Push& from);

  inline Push& operator=(const Push& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Push& default_instance();

  void Swap(Push* other);

  // implements Message ----------------------------------------------

  Push* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Push& from);
  void MergeFrom(const Push& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Push_Payload Payload;

  // accessors -------------------------------------------------------

  // required .yunquan.PushType pushType = 1;
  inline bool has_pushtype() const;
  inline void clear_pushtype();
  static const int kPushTypeFieldNumber = 1;
  inline ::yunquan::PushType pushtype() const;
  inline void set_pushtype(::yunquan::PushType value);

  // repeated int32 uidList = 2;
  inline int uidlist_size() const;
  inline void clear_uidlist();
  static const int kUidListFieldNumber = 2;
  inline ::google::protobuf::int32 uidlist(int index) const;
  inline void set_uidlist(int index, ::google::protobuf::int32 value);
  inline void add_uidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      uidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_uidlist();

  // optional int64 messageExpires = 4;
  inline bool has_messageexpires() const;
  inline void clear_messageexpires();
  static const int kMessageExpiresFieldNumber = 4;
  inline ::google::protobuf::int64 messageexpires() const;
  inline void set_messageexpires(::google::protobuf::int64 value);

  // optional .yunquan.MessageType messageType = 5;
  inline bool has_messagetype() const;
  inline void clear_messagetype();
  static const int kMessageTypeFieldNumber = 5;
  inline ::yunquan::MessageType messagetype() const;
  inline void set_messagetype(::yunquan::MessageType value);

  // repeated .yunquan.Push.Payload payload = 6;
  inline int payload_size() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 6;
  inline const ::yunquan::Push_Payload& payload(int index) const;
  inline ::yunquan::Push_Payload* mutable_payload(int index);
  inline ::yunquan::Push_Payload* add_payload();
  inline const ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload >&
      payload() const;
  inline ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload >*
      mutable_payload();

  // required .yunquan.EventType eventType = 7;
  inline bool has_eventtype() const;
  inline void clear_eventtype();
  static const int kEventTypeFieldNumber = 7;
  inline ::yunquan::EventType eventtype() const;
  inline void set_eventtype(::yunquan::EventType value);

  // @@protoc_insertion_point(class_scope:yunquan.Push)
 private:
  inline void set_has_pushtype();
  inline void clear_has_pushtype();
  inline void set_has_messageexpires();
  inline void clear_has_messageexpires();
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_eventtype();
  inline void clear_has_eventtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > uidlist_;
  int pushtype_;
  int messagetype_;
  ::google::protobuf::int64 messageexpires_;
  ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload > payload_;
  int eventtype_;
  friend void  protobuf_AddDesc_Push_2eproto();
  friend void protobuf_AssignDesc_Push_2eproto();
  friend void protobuf_ShutdownFile_Push_2eproto();

  void InitAsDefaultInstance();
  static Push* default_instance_;
};
// ===================================================================


// ===================================================================

// Push_Payload_ExtendedParameter

// required string key = 1;
inline bool Push_Payload_ExtendedParameter::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Push_Payload_ExtendedParameter::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Push_Payload_ExtendedParameter::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Push_Payload_ExtendedParameter::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Push_Payload_ExtendedParameter::key() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.Payload.ExtendedParameter.key)
  return *key_;
}
inline void Push_Payload_ExtendedParameter::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:yunquan.Push.Payload.ExtendedParameter.key)
}
inline void Push_Payload_ExtendedParameter::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:yunquan.Push.Payload.ExtendedParameter.key)
}
inline void Push_Payload_ExtendedParameter::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yunquan.Push.Payload.ExtendedParameter.key)
}
inline ::std::string* Push_Payload_ExtendedParameter::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:yunquan.Push.Payload.ExtendedParameter.key)
  return key_;
}
inline ::std::string* Push_Payload_ExtendedParameter::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Push_Payload_ExtendedParameter::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:yunquan.Push.Payload.ExtendedParameter.key)
}

// required string val = 2;
inline bool Push_Payload_ExtendedParameter::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Push_Payload_ExtendedParameter::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Push_Payload_ExtendedParameter::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Push_Payload_ExtendedParameter::clear_val() {
  if (val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    val_->clear();
  }
  clear_has_val();
}
inline const ::std::string& Push_Payload_ExtendedParameter::val() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.Payload.ExtendedParameter.val)
  return *val_;
}
inline void Push_Payload_ExtendedParameter::set_val(const ::std::string& value) {
  set_has_val();
  if (val_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    val_ = new ::std::string;
  }
  val_->assign(value);
  // @@protoc_insertion_point(field_set:yunquan.Push.Payload.ExtendedParameter.val)
}
inline void Push_Payload_ExtendedParameter::set_val(const char* value) {
  set_has_val();
  if (val_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    val_ = new ::std::string;
  }
  val_->assign(value);
  // @@protoc_insertion_point(field_set_char:yunquan.Push.Payload.ExtendedParameter.val)
}
inline void Push_Payload_ExtendedParameter::set_val(const char* value, size_t size) {
  set_has_val();
  if (val_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    val_ = new ::std::string;
  }
  val_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yunquan.Push.Payload.ExtendedParameter.val)
}
inline ::std::string* Push_Payload_ExtendedParameter::mutable_val() {
  set_has_val();
  if (val_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    val_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:yunquan.Push.Payload.ExtendedParameter.val)
  return val_;
}
inline ::std::string* Push_Payload_ExtendedParameter::release_val() {
  clear_has_val();
  if (val_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = val_;
    val_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Push_Payload_ExtendedParameter::set_allocated_val(::std::string* val) {
  if (val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete val_;
  }
  if (val) {
    set_has_val();
    val_ = val;
  } else {
    clear_has_val();
    val_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:yunquan.Push.Payload.ExtendedParameter.val)
}

// -------------------------------------------------------------------

// Push_Payload

// optional string title = 1;
inline bool Push_Payload::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Push_Payload::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Push_Payload::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Push_Payload::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& Push_Payload::title() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.Payload.title)
  return *title_;
}
inline void Push_Payload::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:yunquan.Push.Payload.title)
}
inline void Push_Payload::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:yunquan.Push.Payload.title)
}
inline void Push_Payload::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yunquan.Push.Payload.title)
}
inline ::std::string* Push_Payload::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:yunquan.Push.Payload.title)
  return title_;
}
inline ::std::string* Push_Payload::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Push_Payload::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:yunquan.Push.Payload.title)
}

// optional string description = 2;
inline bool Push_Payload::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Push_Payload::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Push_Payload::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Push_Payload::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& Push_Payload::description() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.Payload.description)
  return *description_;
}
inline void Push_Payload::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:yunquan.Push.Payload.description)
}
inline void Push_Payload::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:yunquan.Push.Payload.description)
}
inline void Push_Payload::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yunquan.Push.Payload.description)
}
inline ::std::string* Push_Payload::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:yunquan.Push.Payload.description)
  return description_;
}
inline ::std::string* Push_Payload::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Push_Payload::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:yunquan.Push.Payload.description)
}

// optional string sound = 3;
inline bool Push_Payload::has_sound() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Push_Payload::set_has_sound() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Push_Payload::clear_has_sound() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Push_Payload::clear_sound() {
  if (sound_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sound_->clear();
  }
  clear_has_sound();
}
inline const ::std::string& Push_Payload::sound() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.Payload.sound)
  return *sound_;
}
inline void Push_Payload::set_sound(const ::std::string& value) {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sound_ = new ::std::string;
  }
  sound_->assign(value);
  // @@protoc_insertion_point(field_set:yunquan.Push.Payload.sound)
}
inline void Push_Payload::set_sound(const char* value) {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sound_ = new ::std::string;
  }
  sound_->assign(value);
  // @@protoc_insertion_point(field_set_char:yunquan.Push.Payload.sound)
}
inline void Push_Payload::set_sound(const char* value, size_t size) {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sound_ = new ::std::string;
  }
  sound_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yunquan.Push.Payload.sound)
}
inline ::std::string* Push_Payload::mutable_sound() {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sound_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:yunquan.Push.Payload.sound)
  return sound_;
}
inline ::std::string* Push_Payload::release_sound() {
  clear_has_sound();
  if (sound_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sound_;
    sound_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Push_Payload::set_allocated_sound(::std::string* sound) {
  if (sound_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sound_;
  }
  if (sound) {
    set_has_sound();
    sound_ = sound;
  } else {
    clear_has_sound();
    sound_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:yunquan.Push.Payload.sound)
}

// optional int32 badge = 4;
inline bool Push_Payload::has_badge() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Push_Payload::set_has_badge() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Push_Payload::clear_has_badge() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Push_Payload::clear_badge() {
  badge_ = 0;
  clear_has_badge();
}
inline ::google::protobuf::int32 Push_Payload::badge() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.Payload.badge)
  return badge_;
}
inline void Push_Payload::set_badge(::google::protobuf::int32 value) {
  set_has_badge();
  badge_ = value;
  // @@protoc_insertion_point(field_set:yunquan.Push.Payload.badge)
}

// repeated .yunquan.Push.Payload.ExtendedParameter extendedParameter = 5;
inline int Push_Payload::extendedparameter_size() const {
  return extendedparameter_.size();
}
inline void Push_Payload::clear_extendedparameter() {
  extendedparameter_.Clear();
}
inline const ::yunquan::Push_Payload_ExtendedParameter& Push_Payload::extendedparameter(int index) const {
  // @@protoc_insertion_point(field_get:yunquan.Push.Payload.extendedParameter)
  return extendedparameter_.Get(index);
}
inline ::yunquan::Push_Payload_ExtendedParameter* Push_Payload::mutable_extendedparameter(int index) {
  // @@protoc_insertion_point(field_mutable:yunquan.Push.Payload.extendedParameter)
  return extendedparameter_.Mutable(index);
}
inline ::yunquan::Push_Payload_ExtendedParameter* Push_Payload::add_extendedparameter() {
  // @@protoc_insertion_point(field_add:yunquan.Push.Payload.extendedParameter)
  return extendedparameter_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload_ExtendedParameter >&
Push_Payload::extendedparameter() const {
  // @@protoc_insertion_point(field_list:yunquan.Push.Payload.extendedParameter)
  return extendedparameter_;
}
inline ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload_ExtendedParameter >*
Push_Payload::mutable_extendedparameter() {
  // @@protoc_insertion_point(field_mutable_list:yunquan.Push.Payload.extendedParameter)
  return &extendedparameter_;
}

// -------------------------------------------------------------------

// Push

// required .yunquan.PushType pushType = 1;
inline bool Push::has_pushtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Push::set_has_pushtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Push::clear_has_pushtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Push::clear_pushtype() {
  pushtype_ = 1;
  clear_has_pushtype();
}
inline ::yunquan::PushType Push::pushtype() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.pushType)
  return static_cast< ::yunquan::PushType >(pushtype_);
}
inline void Push::set_pushtype(::yunquan::PushType value) {
  assert(::yunquan::PushType_IsValid(value));
  set_has_pushtype();
  pushtype_ = value;
  // @@protoc_insertion_point(field_set:yunquan.Push.pushType)
}

// repeated int32 uidList = 2;
inline int Push::uidlist_size() const {
  return uidlist_.size();
}
inline void Push::clear_uidlist() {
  uidlist_.Clear();
}
inline ::google::protobuf::int32 Push::uidlist(int index) const {
  // @@protoc_insertion_point(field_get:yunquan.Push.uidList)
  return uidlist_.Get(index);
}
inline void Push::set_uidlist(int index, ::google::protobuf::int32 value) {
  uidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:yunquan.Push.uidList)
}
inline void Push::add_uidlist(::google::protobuf::int32 value) {
  uidlist_.Add(value);
  // @@protoc_insertion_point(field_add:yunquan.Push.uidList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Push::uidlist() const {
  // @@protoc_insertion_point(field_list:yunquan.Push.uidList)
  return uidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Push::mutable_uidlist() {
  // @@protoc_insertion_point(field_mutable_list:yunquan.Push.uidList)
  return &uidlist_;
}

// optional int64 messageExpires = 4;
inline bool Push::has_messageexpires() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Push::set_has_messageexpires() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Push::clear_has_messageexpires() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Push::clear_messageexpires() {
  messageexpires_ = GOOGLE_LONGLONG(0);
  clear_has_messageexpires();
}
inline ::google::protobuf::int64 Push::messageexpires() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.messageExpires)
  return messageexpires_;
}
inline void Push::set_messageexpires(::google::protobuf::int64 value) {
  set_has_messageexpires();
  messageexpires_ = value;
  // @@protoc_insertion_point(field_set:yunquan.Push.messageExpires)
}

// optional .yunquan.MessageType messageType = 5;
inline bool Push::has_messagetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Push::set_has_messagetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Push::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Push::clear_messagetype() {
  messagetype_ = 1;
  clear_has_messagetype();
}
inline ::yunquan::MessageType Push::messagetype() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.messageType)
  return static_cast< ::yunquan::MessageType >(messagetype_);
}
inline void Push::set_messagetype(::yunquan::MessageType value) {
  assert(::yunquan::MessageType_IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:yunquan.Push.messageType)
}

// repeated .yunquan.Push.Payload payload = 6;
inline int Push::payload_size() const {
  return payload_.size();
}
inline void Push::clear_payload() {
  payload_.Clear();
}
inline const ::yunquan::Push_Payload& Push::payload(int index) const {
  // @@protoc_insertion_point(field_get:yunquan.Push.payload)
  return payload_.Get(index);
}
inline ::yunquan::Push_Payload* Push::mutable_payload(int index) {
  // @@protoc_insertion_point(field_mutable:yunquan.Push.payload)
  return payload_.Mutable(index);
}
inline ::yunquan::Push_Payload* Push::add_payload() {
  // @@protoc_insertion_point(field_add:yunquan.Push.payload)
  return payload_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload >&
Push::payload() const {
  // @@protoc_insertion_point(field_list:yunquan.Push.payload)
  return payload_;
}
inline ::google::protobuf::RepeatedPtrField< ::yunquan::Push_Payload >*
Push::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:yunquan.Push.payload)
  return &payload_;
}

// required .yunquan.EventType eventType = 7;
inline bool Push::has_eventtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Push::set_has_eventtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Push::clear_has_eventtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Push::clear_eventtype() {
  eventtype_ = 1;
  clear_has_eventtype();
}
inline ::yunquan::EventType Push::eventtype() const {
  // @@protoc_insertion_point(field_get:yunquan.Push.eventType)
  return static_cast< ::yunquan::EventType >(eventtype_);
}
inline void Push::set_eventtype(::yunquan::EventType value) {
  assert(::yunquan::EventType_IsValid(value));
  set_has_eventtype();
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:yunquan.Push.eventType)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace yunquan

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::yunquan::EventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yunquan::EventType>() {
  return ::yunquan::EventType_descriptor();
}
template <> struct is_proto_enum< ::yunquan::PushType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yunquan::PushType>() {
  return ::yunquan::PushType_descriptor();
}
template <> struct is_proto_enum< ::yunquan::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yunquan::MessageType>() {
  return ::yunquan::MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Push_2eproto__INCLUDED
