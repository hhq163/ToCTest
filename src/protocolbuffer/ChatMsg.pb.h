// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatMsg.proto

#ifndef PROTOBUF_ChatMsg_2eproto__INCLUDED
#define PROTOBUF_ChatMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "MsgObject.pb.h"
// @@protoc_insertion_point(includes)

namespace yunquan {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ChatMsg_2eproto();
void protobuf_AssignDesc_ChatMsg_2eproto();
void protobuf_ShutdownFile_ChatMsg_2eproto();

class ChatMsg;

// ===================================================================

class ChatMsg : public ::google::protobuf::MessageLite {
 public:
  ChatMsg();
  virtual ~ChatMsg();

  ChatMsg(const ChatMsg& from);

  inline ChatMsg& operator=(const ChatMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ChatMsg& default_instance();

  enum MsgObjectOneofCase {
    kObjSystem = 5,
    kObjText = 6,
    kObjImage = 7,
    kObjVoice = 8,
    kObjVideo = 9,
    kObjLink = 10,
    kObjCard = 11,
    MSGOBJECTONEOF_NOT_SET = 0,
  };

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ChatMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ChatMsg* other);

  // implements Message ----------------------------------------------

  ChatMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ChatMsg& from);
  void MergeFrom(const ChatMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 fromUid = 1;
  inline bool has_fromuid() const;
  inline void clear_fromuid();
  static const int kFromUidFieldNumber = 1;
  inline ::google::protobuf::uint32 fromuid() const;
  inline void set_fromuid(::google::protobuf::uint32 value);

  // required uint64 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint64 msgid() const;
  inline void set_msgid(::google::protobuf::uint64 value);

  // required uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required .yunquan.E_MSG_OBJECT_TYPE Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::yunquan::E_MSG_OBJECT_TYPE type() const;
  inline void set_type(::yunquan::E_MSG_OBJECT_TYPE value);

  // optional .yunquan.MsgObjSystem objSystem = 5;
  inline bool has_objsystem() const;
  inline void clear_objsystem();
  static const int kObjSystemFieldNumber = 5;
  inline const ::yunquan::MsgObjSystem& objsystem() const;
  inline ::yunquan::MsgObjSystem* mutable_objsystem();
  inline ::yunquan::MsgObjSystem* release_objsystem();
  inline void set_allocated_objsystem(::yunquan::MsgObjSystem* objsystem);

  // optional .yunquan.MsgObjText objText = 6;
  inline bool has_objtext() const;
  inline void clear_objtext();
  static const int kObjTextFieldNumber = 6;
  inline const ::yunquan::MsgObjText& objtext() const;
  inline ::yunquan::MsgObjText* mutable_objtext();
  inline ::yunquan::MsgObjText* release_objtext();
  inline void set_allocated_objtext(::yunquan::MsgObjText* objtext);

  // optional .yunquan.MsgObjImage objImage = 7;
  inline bool has_objimage() const;
  inline void clear_objimage();
  static const int kObjImageFieldNumber = 7;
  inline const ::yunquan::MsgObjImage& objimage() const;
  inline ::yunquan::MsgObjImage* mutable_objimage();
  inline ::yunquan::MsgObjImage* release_objimage();
  inline void set_allocated_objimage(::yunquan::MsgObjImage* objimage);

  // optional .yunquan.MsgObjVoice objVoice = 8;
  inline bool has_objvoice() const;
  inline void clear_objvoice();
  static const int kObjVoiceFieldNumber = 8;
  inline const ::yunquan::MsgObjVoice& objvoice() const;
  inline ::yunquan::MsgObjVoice* mutable_objvoice();
  inline ::yunquan::MsgObjVoice* release_objvoice();
  inline void set_allocated_objvoice(::yunquan::MsgObjVoice* objvoice);

  // optional .yunquan.MsgObjVideo objVideo = 9;
  inline bool has_objvideo() const;
  inline void clear_objvideo();
  static const int kObjVideoFieldNumber = 9;
  inline const ::yunquan::MsgObjVideo& objvideo() const;
  inline ::yunquan::MsgObjVideo* mutable_objvideo();
  inline ::yunquan::MsgObjVideo* release_objvideo();
  inline void set_allocated_objvideo(::yunquan::MsgObjVideo* objvideo);

  // optional .yunquan.MsgObjLink objLink = 10;
  inline bool has_objlink() const;
  inline void clear_objlink();
  static const int kObjLinkFieldNumber = 10;
  inline const ::yunquan::MsgObjLink& objlink() const;
  inline ::yunquan::MsgObjLink* mutable_objlink();
  inline ::yunquan::MsgObjLink* release_objlink();
  inline void set_allocated_objlink(::yunquan::MsgObjLink* objlink);

  // optional .yunquan.MsgObjCard objCard = 11;
  inline bool has_objcard() const;
  inline void clear_objcard();
  static const int kObjCardFieldNumber = 11;
  inline const ::yunquan::MsgObjCard& objcard() const;
  inline ::yunquan::MsgObjCard* mutable_objcard();
  inline ::yunquan::MsgObjCard* release_objcard();
  inline void set_allocated_objcard(::yunquan::MsgObjCard* objcard);

  inline MsgObjectOneofCase msgObjectOneof_case() const;
  // @@protoc_insertion_point(class_scope:yunquan.ChatMsg)
 private:
  inline void set_has_fromuid();
  inline void clear_has_fromuid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_objsystem();
  inline void set_has_objtext();
  inline void set_has_objimage();
  inline void set_has_objvoice();
  inline void set_has_objvideo();
  inline void set_has_objlink();
  inline void set_has_objcard();

  inline bool has_msgObjectOneof();
  void clear_msgObjectOneof();
  inline void clear_has_msgObjectOneof();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::uint32 fromuid_;
  ::google::protobuf::uint32 time_;
  int type_;
  union MsgObjectOneofUnion {
    ::yunquan::MsgObjSystem* objsystem_;
    ::yunquan::MsgObjText* objtext_;
    ::yunquan::MsgObjImage* objimage_;
    ::yunquan::MsgObjVoice* objvoice_;
    ::yunquan::MsgObjVideo* objvideo_;
    ::yunquan::MsgObjLink* objlink_;
    ::yunquan::MsgObjCard* objcard_;
  } msgObjectOneof_;
  ::google::protobuf::uint32 _oneof_case_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ChatMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ChatMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_ChatMsg_2eproto();
  friend void protobuf_ShutdownFile_ChatMsg_2eproto();

  void InitAsDefaultInstance();
  static ChatMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// ChatMsg

// required uint32 fromUid = 1;
inline bool ChatMsg::has_fromuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatMsg::set_has_fromuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatMsg::clear_has_fromuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatMsg::clear_fromuid() {
  fromuid_ = 0u;
  clear_has_fromuid();
}
inline ::google::protobuf::uint32 ChatMsg::fromuid() const {
  // @@protoc_insertion_point(field_get:yunquan.ChatMsg.fromUid)
  return fromuid_;
}
inline void ChatMsg::set_fromuid(::google::protobuf::uint32 value) {
  set_has_fromuid();
  fromuid_ = value;
  // @@protoc_insertion_point(field_set:yunquan.ChatMsg.fromUid)
}

// required uint64 msgid = 2;
inline bool ChatMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMsg::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
  clear_has_msgid();
}
inline ::google::protobuf::uint64 ChatMsg::msgid() const {
  // @@protoc_insertion_point(field_get:yunquan.ChatMsg.msgid)
  return msgid_;
}
inline void ChatMsg::set_msgid(::google::protobuf::uint64 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:yunquan.ChatMsg.msgid)
}

// required uint32 time = 3;
inline bool ChatMsg::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatMsg::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatMsg::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatMsg::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 ChatMsg::time() const {
  // @@protoc_insertion_point(field_get:yunquan.ChatMsg.time)
  return time_;
}
inline void ChatMsg::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:yunquan.ChatMsg.time)
}

// required .yunquan.E_MSG_OBJECT_TYPE Type = 4;
inline bool ChatMsg::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatMsg::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::yunquan::E_MSG_OBJECT_TYPE ChatMsg::type() const {
  // @@protoc_insertion_point(field_get:yunquan.ChatMsg.Type)
  return static_cast< ::yunquan::E_MSG_OBJECT_TYPE >(type_);
}
inline void ChatMsg::set_type(::yunquan::E_MSG_OBJECT_TYPE value) {
  assert(::yunquan::E_MSG_OBJECT_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:yunquan.ChatMsg.Type)
}

// optional .yunquan.MsgObjSystem objSystem = 5;
inline bool ChatMsg::has_objsystem() const {
  return msgObjectOneof_case() == kObjSystem;
}
inline void ChatMsg::set_has_objsystem() {
  _oneof_case_[0] = kObjSystem;
}
inline void ChatMsg::clear_objsystem() {
  if (has_objsystem()) {
    delete msgObjectOneof_.objsystem_;
    clear_has_msgObjectOneof();
  }
}
inline const ::yunquan::MsgObjSystem& ChatMsg::objsystem() const {
  return has_objsystem() ? *msgObjectOneof_.objsystem_
                      : ::yunquan::MsgObjSystem::default_instance();
}
inline ::yunquan::MsgObjSystem* ChatMsg::mutable_objsystem() {
  if (!has_objsystem()) {
    clear_msgObjectOneof();
    set_has_objsystem();
    msgObjectOneof_.objsystem_ = new ::yunquan::MsgObjSystem;
  }
  return msgObjectOneof_.objsystem_;
}
inline ::yunquan::MsgObjSystem* ChatMsg::release_objsystem() {
  if (has_objsystem()) {
    clear_has_msgObjectOneof();
    ::yunquan::MsgObjSystem* temp = msgObjectOneof_.objsystem_;
    msgObjectOneof_.objsystem_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatMsg::set_allocated_objsystem(::yunquan::MsgObjSystem* objsystem) {
  clear_msgObjectOneof();
  if (objsystem) {
    set_has_objsystem();
    msgObjectOneof_.objsystem_ = objsystem;
  }
}

// optional .yunquan.MsgObjText objText = 6;
inline bool ChatMsg::has_objtext() const {
  return msgObjectOneof_case() == kObjText;
}
inline void ChatMsg::set_has_objtext() {
  _oneof_case_[0] = kObjText;
}
inline void ChatMsg::clear_objtext() {
  if (has_objtext()) {
    delete msgObjectOneof_.objtext_;
    clear_has_msgObjectOneof();
  }
}
inline const ::yunquan::MsgObjText& ChatMsg::objtext() const {
  return has_objtext() ? *msgObjectOneof_.objtext_
                      : ::yunquan::MsgObjText::default_instance();
}
inline ::yunquan::MsgObjText* ChatMsg::mutable_objtext() {
  if (!has_objtext()) {
    clear_msgObjectOneof();
    set_has_objtext();
    msgObjectOneof_.objtext_ = new ::yunquan::MsgObjText;
  }
  return msgObjectOneof_.objtext_;
}
inline ::yunquan::MsgObjText* ChatMsg::release_objtext() {
  if (has_objtext()) {
    clear_has_msgObjectOneof();
    ::yunquan::MsgObjText* temp = msgObjectOneof_.objtext_;
    msgObjectOneof_.objtext_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatMsg::set_allocated_objtext(::yunquan::MsgObjText* objtext) {
  clear_msgObjectOneof();
  if (objtext) {
    set_has_objtext();
    msgObjectOneof_.objtext_ = objtext;
  }
}

// optional .yunquan.MsgObjImage objImage = 7;
inline bool ChatMsg::has_objimage() const {
  return msgObjectOneof_case() == kObjImage;
}
inline void ChatMsg::set_has_objimage() {
  _oneof_case_[0] = kObjImage;
}
inline void ChatMsg::clear_objimage() {
  if (has_objimage()) {
    delete msgObjectOneof_.objimage_;
    clear_has_msgObjectOneof();
  }
}
inline const ::yunquan::MsgObjImage& ChatMsg::objimage() const {
  return has_objimage() ? *msgObjectOneof_.objimage_
                      : ::yunquan::MsgObjImage::default_instance();
}
inline ::yunquan::MsgObjImage* ChatMsg::mutable_objimage() {
  if (!has_objimage()) {
    clear_msgObjectOneof();
    set_has_objimage();
    msgObjectOneof_.objimage_ = new ::yunquan::MsgObjImage;
  }
  return msgObjectOneof_.objimage_;
}
inline ::yunquan::MsgObjImage* ChatMsg::release_objimage() {
  if (has_objimage()) {
    clear_has_msgObjectOneof();
    ::yunquan::MsgObjImage* temp = msgObjectOneof_.objimage_;
    msgObjectOneof_.objimage_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatMsg::set_allocated_objimage(::yunquan::MsgObjImage* objimage) {
  clear_msgObjectOneof();
  if (objimage) {
    set_has_objimage();
    msgObjectOneof_.objimage_ = objimage;
  }
}

// optional .yunquan.MsgObjVoice objVoice = 8;
inline bool ChatMsg::has_objvoice() const {
  return msgObjectOneof_case() == kObjVoice;
}
inline void ChatMsg::set_has_objvoice() {
  _oneof_case_[0] = kObjVoice;
}
inline void ChatMsg::clear_objvoice() {
  if (has_objvoice()) {
    delete msgObjectOneof_.objvoice_;
    clear_has_msgObjectOneof();
  }
}
inline const ::yunquan::MsgObjVoice& ChatMsg::objvoice() const {
  return has_objvoice() ? *msgObjectOneof_.objvoice_
                      : ::yunquan::MsgObjVoice::default_instance();
}
inline ::yunquan::MsgObjVoice* ChatMsg::mutable_objvoice() {
  if (!has_objvoice()) {
    clear_msgObjectOneof();
    set_has_objvoice();
    msgObjectOneof_.objvoice_ = new ::yunquan::MsgObjVoice;
  }
  return msgObjectOneof_.objvoice_;
}
inline ::yunquan::MsgObjVoice* ChatMsg::release_objvoice() {
  if (has_objvoice()) {
    clear_has_msgObjectOneof();
    ::yunquan::MsgObjVoice* temp = msgObjectOneof_.objvoice_;
    msgObjectOneof_.objvoice_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatMsg::set_allocated_objvoice(::yunquan::MsgObjVoice* objvoice) {
  clear_msgObjectOneof();
  if (objvoice) {
    set_has_objvoice();
    msgObjectOneof_.objvoice_ = objvoice;
  }
}

// optional .yunquan.MsgObjVideo objVideo = 9;
inline bool ChatMsg::has_objvideo() const {
  return msgObjectOneof_case() == kObjVideo;
}
inline void ChatMsg::set_has_objvideo() {
  _oneof_case_[0] = kObjVideo;
}
inline void ChatMsg::clear_objvideo() {
  if (has_objvideo()) {
    delete msgObjectOneof_.objvideo_;
    clear_has_msgObjectOneof();
  }
}
inline const ::yunquan::MsgObjVideo& ChatMsg::objvideo() const {
  return has_objvideo() ? *msgObjectOneof_.objvideo_
                      : ::yunquan::MsgObjVideo::default_instance();
}
inline ::yunquan::MsgObjVideo* ChatMsg::mutable_objvideo() {
  if (!has_objvideo()) {
    clear_msgObjectOneof();
    set_has_objvideo();
    msgObjectOneof_.objvideo_ = new ::yunquan::MsgObjVideo;
  }
  return msgObjectOneof_.objvideo_;
}
inline ::yunquan::MsgObjVideo* ChatMsg::release_objvideo() {
  if (has_objvideo()) {
    clear_has_msgObjectOneof();
    ::yunquan::MsgObjVideo* temp = msgObjectOneof_.objvideo_;
    msgObjectOneof_.objvideo_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatMsg::set_allocated_objvideo(::yunquan::MsgObjVideo* objvideo) {
  clear_msgObjectOneof();
  if (objvideo) {
    set_has_objvideo();
    msgObjectOneof_.objvideo_ = objvideo;
  }
}

// optional .yunquan.MsgObjLink objLink = 10;
inline bool ChatMsg::has_objlink() const {
  return msgObjectOneof_case() == kObjLink;
}
inline void ChatMsg::set_has_objlink() {
  _oneof_case_[0] = kObjLink;
}
inline void ChatMsg::clear_objlink() {
  if (has_objlink()) {
    delete msgObjectOneof_.objlink_;
    clear_has_msgObjectOneof();
  }
}
inline const ::yunquan::MsgObjLink& ChatMsg::objlink() const {
  return has_objlink() ? *msgObjectOneof_.objlink_
                      : ::yunquan::MsgObjLink::default_instance();
}
inline ::yunquan::MsgObjLink* ChatMsg::mutable_objlink() {
  if (!has_objlink()) {
    clear_msgObjectOneof();
    set_has_objlink();
    msgObjectOneof_.objlink_ = new ::yunquan::MsgObjLink;
  }
  return msgObjectOneof_.objlink_;
}
inline ::yunquan::MsgObjLink* ChatMsg::release_objlink() {
  if (has_objlink()) {
    clear_has_msgObjectOneof();
    ::yunquan::MsgObjLink* temp = msgObjectOneof_.objlink_;
    msgObjectOneof_.objlink_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatMsg::set_allocated_objlink(::yunquan::MsgObjLink* objlink) {
  clear_msgObjectOneof();
  if (objlink) {
    set_has_objlink();
    msgObjectOneof_.objlink_ = objlink;
  }
}

// optional .yunquan.MsgObjCard objCard = 11;
inline bool ChatMsg::has_objcard() const {
  return msgObjectOneof_case() == kObjCard;
}
inline void ChatMsg::set_has_objcard() {
  _oneof_case_[0] = kObjCard;
}
inline void ChatMsg::clear_objcard() {
  if (has_objcard()) {
    delete msgObjectOneof_.objcard_;
    clear_has_msgObjectOneof();
  }
}
inline const ::yunquan::MsgObjCard& ChatMsg::objcard() const {
  return has_objcard() ? *msgObjectOneof_.objcard_
                      : ::yunquan::MsgObjCard::default_instance();
}
inline ::yunquan::MsgObjCard* ChatMsg::mutable_objcard() {
  if (!has_objcard()) {
    clear_msgObjectOneof();
    set_has_objcard();
    msgObjectOneof_.objcard_ = new ::yunquan::MsgObjCard;
  }
  return msgObjectOneof_.objcard_;
}
inline ::yunquan::MsgObjCard* ChatMsg::release_objcard() {
  if (has_objcard()) {
    clear_has_msgObjectOneof();
    ::yunquan::MsgObjCard* temp = msgObjectOneof_.objcard_;
    msgObjectOneof_.objcard_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatMsg::set_allocated_objcard(::yunquan::MsgObjCard* objcard) {
  clear_msgObjectOneof();
  if (objcard) {
    set_has_objcard();
    msgObjectOneof_.objcard_ = objcard;
  }
}

inline bool ChatMsg::has_msgObjectOneof() {
  return msgObjectOneof_case() != MSGOBJECTONEOF_NOT_SET;
}
inline void ChatMsg::clear_has_msgObjectOneof() {
  _oneof_case_[0] = MSGOBJECTONEOF_NOT_SET;
}
inline ChatMsg::MsgObjectOneofCase ChatMsg::msgObjectOneof_case() const {
  return ChatMsg::MsgObjectOneofCase(_oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace yunquan

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChatMsg_2eproto__INCLUDED
