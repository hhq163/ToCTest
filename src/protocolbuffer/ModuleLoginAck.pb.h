// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ModuleLoginAck.proto

#ifndef PROTOBUF_ModuleLoginAck_2eproto__INCLUDED
#define PROTOBUF_ModuleLoginAck_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace yunquan {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ModuleLoginAck_2eproto();
void protobuf_AssignDesc_ModuleLoginAck_2eproto();
void protobuf_ShutdownFile_ModuleLoginAck_2eproto();

class ModuleLoginAck;

// ===================================================================

class ModuleLoginAck : public ::google::protobuf::MessageLite {
 public:
  ModuleLoginAck();
  virtual ~ModuleLoginAck();

  ModuleLoginAck(const ModuleLoginAck& from);

  inline ModuleLoginAck& operator=(const ModuleLoginAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ModuleLoginAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ModuleLoginAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ModuleLoginAck* other);

  // implements Message ----------------------------------------------

  ModuleLoginAck* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ModuleLoginAck& from);
  void MergeFrom(const ModuleLoginAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required uint32 srcMId = 2;
  inline bool has_srcmid() const;
  inline void clear_srcmid();
  static const int kSrcMIdFieldNumber = 2;
  inline ::google::protobuf::uint32 srcmid() const;
  inline void set_srcmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:yunquan.ModuleLoginAck)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_srcmid();
  inline void clear_has_srcmid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 srcmid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ModuleLoginAck_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ModuleLoginAck_2eproto();
  #endif
  friend void protobuf_AssignDesc_ModuleLoginAck_2eproto();
  friend void protobuf_ShutdownFile_ModuleLoginAck_2eproto();

  void InitAsDefaultInstance();
  static ModuleLoginAck* default_instance_;
};
// ===================================================================


// ===================================================================

// ModuleLoginAck

// required uint32 result = 1;
inline bool ModuleLoginAck::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModuleLoginAck::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModuleLoginAck::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModuleLoginAck::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 ModuleLoginAck::result() const {
  // @@protoc_insertion_point(field_get:yunquan.ModuleLoginAck.result)
  return result_;
}
inline void ModuleLoginAck::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:yunquan.ModuleLoginAck.result)
}

// required uint32 srcMId = 2;
inline bool ModuleLoginAck::has_srcmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModuleLoginAck::set_has_srcmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModuleLoginAck::clear_has_srcmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModuleLoginAck::clear_srcmid() {
  srcmid_ = 0u;
  clear_has_srcmid();
}
inline ::google::protobuf::uint32 ModuleLoginAck::srcmid() const {
  // @@protoc_insertion_point(field_get:yunquan.ModuleLoginAck.srcMId)
  return srcmid_;
}
inline void ModuleLoginAck::set_srcmid(::google::protobuf::uint32 value) {
  set_has_srcmid();
  srcmid_ = value;
  // @@protoc_insertion_point(field_set:yunquan.ModuleLoginAck.srcMId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace yunquan

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ModuleLoginAck_2eproto__INCLUDED
